# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu tofi-run | xargs swaymsg exec --
# set $menu wofi --show run

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/.background fill

output eDP-1 resolution 2560x1440 scale 1

exec kanshi

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000 -s center -i ~/.lock' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000 -s center -i ~/.lock'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input * {
    xkb_options ctrl:nocaps
}

input "1739:0:Synaptics_TM3289-021" {
    tap enabled
    accel_profile "adaptive" # disable mouse acceleration (enabled by default; to set it manually, use "adaptive" instead of "flat")
    pointer_accel 0.5
}

input "1267:12792:ELAN067B:00_04F3:31F8_Touchpad" {
    tap enabled
    accel_profile "adaptive"
    pointer_accel 0.5
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec wofi --show drun # desktop applications
    bindsym $mod+x exec $menu # all executables

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

#
# Workspaces:
#
    # rename workspace
    bindsym $mod+n exec swaymsg rename workspace to "$(swaymsg -t get_workspaces | jq '.[] | select(.focused==true).num'):$(dmenu -p 'Rename workspace to ' < /dev/null)"
    # reset custom name of workspace
    bindsym $mod+Shift+n exec swaymsg rename workspace to "$(swaymsg -t get_workspaces | jq '.[] | select(.focused==true).num')"

    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10

    # move focused workspace to monitor
    bindsym $mod+Control+$left move workspace to output left
    bindsym $mod+Control+$down move workspace to output down
    bindsym $mod+Control+$up move workspace to output up
    bindsym $mod+Control+$right move workspace to output right
    # or use the arrow keys
    bindsym $mod+Control+Left move workspace to output left
    bindsym $mod+Control+Down move workspace to output down
    bindsym $mod+Control+Up move workspace to output up
    bindsym $mod+Control+Right move workspace to output right

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
    bindsym $mod+z focus child

    # hide and show status bar
    bindsym $mod+t exec pkill -SIGUSR1 waybar

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+grave move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+grave scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px or 3 ppt
    bindsym $down resize grow height 10px or 3 ppt
    bindsym $up resize shrink height 10px or 3 ppt
    bindsym $right resize grow width 10px or 3 ppt

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px or 3 ppt
    bindsym Down resize grow height 10px or 3 ppt
    bindsym Up resize shrink height 10px or 3 ppt
    bindsym Right resize grow width 10px or 3 ppt

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Special keys
#
## Sound:
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ '-5%', exec pkill -SIGRTMIN+10 waybar
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ '+5%', exec pkill -SIGRTMIN+10 waybar
    bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle, exec pkill -SIGRTMIN+10 waybar
## Backlight:
    bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 2%-, exec pkill -SIGRTMIN+10 waybar
    bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set 2%+, exec pkill -SIGRTMIN+10 waybar
## Other utilities:
    bindsym Print exec grim "screenshots/screenshot-$(date +%Y-%m-%d_%H%M%S).png"
    bindsym Shift+Print exec grim -g "$(slurp)" "screenshots/screenshot-$(date +%Y-%m-%d_%H%M%S).png"
    # bindsym Print exec XDG_CURRENT_DESKTOP=sway flameshot full -p "screenshot-$(date +%Y-%m-%d_%H%M%S).png"
    # bindsym Shift+Print exec XDG_CURRENT_DESKTOP=sway flameshot gui -p "screenshot-$(date +%Y-%m-%d_%H%M%S).png"
## Common applications:
    bindsym $mod+y exec ~/bin/passmenu --type, mode "default"
    bindsym $mod+u exec emacsclient --alternate-editor='' --create-frame --no-wait , mode "default"
    bindsym $mod+o exec code , mode "default"
    bindsym $mod+i exec MOZ_ENABLE_WAYLAND=1 firefox
    bindsym $mod+Shift+i exec MOZ_ENABLE_WAYLAND=1 firefox --private-window
    bindsym $mod+bracketleft exec chromium --new-window --app="https://stats.crashbox.io/d/A6T6hIRMk/humidor?orgId=1&refresh=1m&kiosk=tv"
    bindsym $mod+bracketright exec vlc --fullscreen itcannotbe.mkv
## Media menu:
    mode "media" {
        bindsym space \
            exec dbus-send --print-reply \
                --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 \
                org.mpris.MediaPlayer2.Player.PlayPause, \
            exec pkill -SIGRTMIN+10 waybar, \
            mode "default"
        bindsym $right \
            exec dbus-send --print-reply \
               --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 \
                org.mpris.MediaPlayer2.Player.Next, \
            exec pkill -SIGRTMIN+10 waybar
        bindsym $left \
            exec dbus-send --print-reply \
                --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 \
                org.mpris.MediaPlayer2.Player.Previous, \
            exec pkill -SIGRTMIN+10 waybar
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+m mode "media"
## Session and power management:
    set $mode_system [0-3] monitor, (l) lock, (E) logout, (s) suspend, (R) reboot, (S) shutdown
    mode "$mode_system" {
        bindsym 0 exec ~/bin/setup mirror, mode "default"
        bindsym 1 exec ~/bin/setup single, mode "default"
        bindsym 2 exec ~/bin/setup double, mode "default"
        bindsym 3 exec ~/bin/setup triple, mode "default"
        bindsym l exec pkill -USR1 swayidle, mode "default"
        bindsym Shift+e exec swaymsg exit, mode "default"
        bindsym s exec systemctl suspend, mode "default"
        bindsym Shift+r exec systemctl reboot, mode "default"
        bindsym Shift+s exec systemctl poweroff, mode "default"

        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+Escape mode "$mode_system"

#
# Styling
#
## Basics:
    font pango:Ubuntu, FontAwesome 10
    set $bg-color            #464f63
    set $inactive-bg-color   #020202
    set $text-color          #f3f4f5
    set $inactive-text-color #f3f4f5
    #set $inactive-text-color #676e7d
    set $urgent-bg-color    #f90900
    set $menu-bg-color     #676e7d
## Window colors:
    #                       border             background         text                 indicator
    client.focused          $bg-color          $bg-color          $text-color          $bg-color
    client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color $inactive-bg-color
    client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color $inactive-bg-color
    client.urgent           $urgent-bg-color   $urgent-bg-color   $text-color          $urgent-bg-color
## Window borders:
    default_border pixel 1

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

#     colors {
#         # statusline #ffffff
#         # background #323232
#         # inactive_workspace #323232 #323232 #5c5c5c
#         statusline #ffffff
#         #                  border             background         text
#         focused_workspace  $bg-color          $bg-color          $text-color
#         inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
#         urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
#         binding_mode       $menu-bg-color     $menu-bg-color     $text-color
#     }
# }

bar {
    swaybar_command waybar
}

#
# Startup applications
#

exec gammastep -l 46.53:6.63

exec $term --title scratchpad
for_window [title="scratchpad"] move scratchpad

exec nm-applet
exec blueman-applet

for_window [title="Spotify"] move to workspace number 10

assign [instance="slack"] 8

include /etc/sway/config.d/*
